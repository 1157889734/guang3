; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\boot.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\boot.d --cpu=Cortex-M0 --apcs=interwork -I.\ -I..\..\..\..\HW -I..\..\..\..\CMSIS\CM0\CoreSupport -I..\..\..\..\CMSIS\CM0\DeviceSupport\Nuvoton\ISD91xx -I..\..\..\Include -I..\..\..\Include\Driver -ID:\Keil\ARM\CMSIS\Include -ID:\Keil\ARM\INC\?ST\STM32F10x --omf_browse=.\obj\boot.crf ..\..\..\..\CMSIS\CM0\DeviceSupport\NUVOTON\ISD91xx\boot_ISD9xx.c]
                          THUMB

                          AREA ||i.ACMP_IRQHandler||, CODE, READONLY, ALIGN=1

                  ACMP_IRQHandler PROC
                  |L1.0|
;;;134    }
;;;135    __weak void ACMP_IRQHandler(void)
000000  e7fe              B        |L1.0|
;;;136    {
;;;137      while(1);
;;;138    }
;;;139    __weak void PDMA_IRQHandler(void)
                          ENDP


                          AREA ||i.ADC_IRQHandler||, CODE, READONLY, ALIGN=1

                  ADC_IRQHandler PROC
                  |L2.0|
;;;146    }
;;;147    __weak void ADC_IRQHandler(void)
000000  e7fe              B        |L2.0|
;;;148    {
;;;149      while(1);
;;;150    }
;;;151    __weak void CAPS_IRQHandler(void)
                          ENDP


                          AREA ||i.ALC_IRQHandler||, CODE, READONLY, ALIGN=1

                  ALC_IRQHandler PROC
                  |L3.0|
;;;158    }
;;;159    __weak void ALC_IRQHandler(void)
000000  e7fe              B        |L3.0|
;;;160    {
;;;161      while(1);
;;;162    }
;;;163    __weak void TALARM_IRQHandler(void)
                          ENDP


                          AREA ||i.BOD_IRQHandler||, CODE, READONLY, ALIGN=1

                  BOD_IRQHandler PROC
                  |L4.0|
;;;86     
;;;87      __weak void BOD_IRQHandler(void)
000000  e7fe              B        |L4.0|
;;;88     {
;;;89       while(1);
;;;90     }
;;;91     __weak void WDT_IRQHandler(void)
                          ENDP


                          AREA ||i.CAPS_IRQHandler||, CODE, READONLY, ALIGN=1

                  CAPS_IRQHandler PROC
                  |L5.0|
;;;150    }
;;;151    __weak void CAPS_IRQHandler(void)
000000  e7fe              B        |L5.0|
;;;152    {
;;;153      while(1);
;;;154    }
;;;155    __weak void RTC_IRQHandler(void)
                          ENDP


                          AREA ||i.DPWM_IRQHandler||, CODE, READONLY, ALIGN=1

                  DPWM_IRQHandler PROC
                  |L6.0|
;;;126    }
;;;127    __weak void DPWM_IRQHandler(void)
000000  e7fe              B        |L6.0|
;;;128    {
;;;129      while(1);
;;;130    }
;;;131    __weak void I2C0_IRQHandler(void)
                          ENDP


                          AREA ||i.Default_IRQHandler||, CODE, READONLY, ALIGN=1

                  Default_IRQHandler PROC
                  |L7.0|
;;;81     
;;;82     __weak void Default_IRQHandler(void)
000000  e7fe              B        |L7.0|
;;;83     {
;;;84       while(1);
;;;85     }
;;;86     
                          ENDP


                          AREA ||i.EINT0_IRQHandler||, CODE, READONLY, ALIGN=1

                  EINT0_IRQHandler PROC
                  |L8.0|
;;;94     }
;;;95     __weak void EINT0_IRQHandler(void)
000000  e7fe              B        |L8.0|
;;;96     {
;;;97       while(1);
;;;98     }
;;;99     __weak void EINT1_IRQHandler(void)
                          ENDP


                          AREA ||i.EINT1_IRQHandler||, CODE, READONLY, ALIGN=1

                  EINT1_IRQHandler PROC
                  |L9.0|
;;;98     }
;;;99     __weak void EINT1_IRQHandler(void)
000000  e7fe              B        |L9.0|
;;;100    {
;;;101      while(1);
;;;102    }
;;;103    __weak void GPAB_IRQHandler(void)
                          ENDP


                          AREA ||i.GPAB_IRQHandler||, CODE, READONLY, ALIGN=1

                  GPAB_IRQHandler PROC
                  |L10.0|
;;;102    }
;;;103    __weak void GPAB_IRQHandler(void)
000000  e7fe              B        |L10.0|
;;;104    {
;;;105      while(1);
;;;106    }
;;;107    __weak void PWMA_IRQHandler(void)
                          ENDP


                          AREA ||i.GPIO_IRQHandler||, CODE, READONLY, ALIGN=1

                  GPIO_IRQHandler PROC
                  |L11.0|
;;;76     
;;;77     __weak void GPIO_IRQHandler(void) 
000000  e7fe              B        |L11.0|
;;;78     {
;;;79       while(1);
;;;80     }
;;;81     
                          ENDP


                          AREA ||i.HardFault_Handler||, CODE, READONLY, ALIGN=1

                  HardFault_Handler PROC
                  |L12.0|
;;;56     
;;;57     __weak void HardFault_Handler(void)
000000  e7fe              B        |L12.0|
;;;58        {
;;;59       while(1);
;;;60     }
;;;61     
                          ENDP


                          AREA ||i.I2C0_IRQHandler||, CODE, READONLY, ALIGN=1

                  I2C0_IRQHandler PROC
                  |L13.0|
;;;130    }
;;;131    __weak void I2C0_IRQHandler(void)
000000  e7fe              B        |L13.0|
;;;132    {
;;;133      while(1);
;;;134    }
;;;135    __weak void ACMP_IRQHandler(void)
                          ENDP


                          AREA ||i.I2S_IRQHandler||, CODE, READONLY, ALIGN=1

                  I2S_IRQHandler PROC
                  |L14.0|
;;;142    }
;;;143    __weak void I2S_IRQHandler(void)
000000  e7fe              B        |L14.0|
;;;144    {
;;;145      while(1);
;;;146    }
;;;147    __weak void ADC_IRQHandler(void)
                          ENDP


                          AREA ||i.NMI_Handler||, CODE, READONLY, ALIGN=1

                  NMI_Handler PROC
                  |L15.0|
;;;51     
;;;52     __weak void NMI_Handler(void)
000000  e7fe              B        |L15.0|
;;;53     {
;;;54       while(1);
;;;55     }
;;;56     
                          ENDP


                          AREA ||i.PDMA_IRQHandler||, CODE, READONLY, ALIGN=1

                  PDMA_IRQHandler PROC
                  |L16.0|
;;;138    }
;;;139    __weak void PDMA_IRQHandler(void)
000000  e7fe              B        |L16.0|
;;;140    {
;;;141      while(1);
;;;142    }
;;;143    __weak void I2S_IRQHandler(void)
                          ENDP


                          AREA ||i.PWMA_IRQHandler||, CODE, READONLY, ALIGN=1

                  PWMA_IRQHandler PROC
                  |L17.0|
;;;106    }
;;;107    __weak void PWMA_IRQHandler(void)
000000  e7fe              B        |L17.0|
;;;108    {
;;;109      while(1);
;;;110    }
;;;111    __weak void TMR0_IRQHandler(void)
                          ENDP


                          AREA ||i.PendSV_Handler||, CODE, READONLY, ALIGN=1

                  PendSV_Handler PROC
                  |L18.0|
;;;66     
;;;67     __weak void PendSV_Handler(void)
000000  e7fe              B        |L18.0|
;;;68     {
;;;69       while(1);
;;;70     }
;;;71     
                          ENDP


                          AREA ||i.RTC_IRQHandler||, CODE, READONLY, ALIGN=1

                  RTC_IRQHandler PROC
                  |L19.0|
;;;154    }
;;;155    __weak void RTC_IRQHandler(void)
000000  e7fe              B        |L19.0|
;;;156    {
;;;157      while(1);
;;;158    }
;;;159    __weak void ALC_IRQHandler(void)
                          ENDP


                          AREA ||i.Reset_Handler||, CODE, READONLY, ALIGN=2

                  Reset_Handler PROC
;;;177    
;;;178    void Reset_Handler(void)
000000  b510              PUSH     {r4,lr}
;;;179    {
;;;180    /*  check ICE_CLK and ICE_DAT to disable power down to the chip */
;;;181    	if (SYSCLK->DBGPD.ICE_CLK == 0 && SYSCLK->DBGPD.ICE_DAT == 0)
000002  4807              LDR      r0,|L20.32|
000004  6a81              LDR      r1,[r0,#0x28]
000006  0649              LSLS     r1,r1,#25
000008  d406              BMI      |L20.24|
00000a  6a81              LDR      r1,[r0,#0x28]
00000c  0609              LSLS     r1,r1,#24
00000e  d403              BMI      |L20.24|
;;;182    		SYSCLK->DBGPD.DISABLE_PD = 1;
000010  6a81              LDR      r1,[r0,#0x28]
000012  2201              MOVS     r2,#1
000014  4311              ORRS     r1,r1,r2
000016  6281              STR      r1,[r0,#0x28]
                  |L20.24|
;;;183    	__main();
000018  f7fffffe          BL       __main
;;;184    }
00001c  bd10              POP      {r4,pc}
;;;185    
                          ENDP

00001e  0000              DCW      0x0000
                  |L20.32|
                          DCD      0x50000200

                          AREA ||i.SPI0_IRQHandler||, CODE, READONLY, ALIGN=1

                  SPI0_IRQHandler PROC
                  |L21.0|
;;;122    }
;;;123    __weak void SPI0_IRQHandler(void)
000000  e7fe              B        |L21.0|
;;;124    {
;;;125      while(1);
;;;126    }
;;;127    __weak void DPWM_IRQHandler(void)
                          ENDP


                          AREA ||i.SVC_Handler||, CODE, READONLY, ALIGN=1

                  SVC_Handler PROC
                  |L22.0|
;;;61     
;;;62     __weak void SVC_Handler(void)
000000  e7fe              B        |L22.0|
;;;63     {
;;;64       while(1);
;;;65     }
;;;66     
                          ENDP


                          AREA ||i.SysTick_Handler||, CODE, READONLY, ALIGN=1

                  SysTick_Handler PROC
                  |L23.0|
;;;71     
;;;72     __weak void SysTick_Handler(void)
000000  e7fe              B        |L23.0|
;;;73     {
;;;74       while(1);
;;;75     }
;;;76     
                          ENDP


                          AREA ||i.TALARM_IRQHandler||, CODE, READONLY, ALIGN=1

                  TALARM_IRQHandler PROC
                  |L24.0|
;;;162    }
;;;163    __weak void TALARM_IRQHandler(void)
000000  e7fe              B        |L24.0|
;;;164    {
;;;165      while(1);
;;;166    }
;;;167    
                          ENDP


                          AREA ||i.TMR0_IRQHandler||, CODE, READONLY, ALIGN=1

                  TMR0_IRQHandler PROC
                  |L25.0|
;;;110    }
;;;111    __weak void TMR0_IRQHandler(void)
000000  e7fe              B        |L25.0|
;;;112    {
;;;113      while(1);
;;;114    }
;;;115    __weak void TMR1_IRQHandler(void)
                          ENDP


                          AREA ||i.TMR1_IRQHandler||, CODE, READONLY, ALIGN=1

                  TMR1_IRQHandler PROC
                  |L26.0|
;;;114    }
;;;115    __weak void TMR1_IRQHandler(void)
000000  e7fe              B        |L26.0|
;;;116    {
;;;117      while(1);
;;;118    }
;;;119    __weak void UART02_IRQHandler(void)
                          ENDP


                          AREA ||i.UART02_IRQHandler||, CODE, READONLY, ALIGN=1

                  UART02_IRQHandler PROC
                  |L27.0|
;;;118    }
;;;119    __weak void UART02_IRQHandler(void)
000000  e7fe              B        |L27.0|
;;;120    {
;;;121      while(1);
;;;122    }
;;;123    __weak void SPI0_IRQHandler(void)
                          ENDP


                          AREA ||i.WDT_IRQHandler||, CODE, READONLY, ALIGN=1

                  WDT_IRQHandler PROC
                  |L28.0|
;;;90     }
;;;91     __weak void WDT_IRQHandler(void)
000000  e7fe              B        |L28.0|
;;;92     {
;;;93       while(1);
;;;94     }
;;;95     __weak void EINT0_IRQHandler(void)
                          ENDP


                          AREA ||i.__user_initial_stackheap||, CODE, READONLY, ALIGN=1

                  __user_initial_stackheap PROC
;;;260    __value_in_regs struct __initial_stackheap
;;;261    __user_initial_stackheap(unsigned hb, unsigned sb, unsigned hl, unsigned sl)
000000  460a              MOV      r2,r1
;;;262    {	
;;;263      struct __initial_stackheap s;
;;;264    	
;;;265      s.heap_base   = hb;
;;;266      s.stack_base  = sb;
;;;267      s.heap_limit  = s.stack_base;
;;;268      s.stack_limit = s.heap_base;
;;;269      return s;
000002  4603              MOV      r3,r0
;;;270    }
000004  4770              BX       lr
;;;271    
                          ENDP


                          AREA ||i._sys_exit||, CODE, READONLY, ALIGN=1

                  _sys_exit PROC
                  |L30.0|
;;;276    
;;;277    void _sys_exit(int return_code)
000000  e7fe              B        |L30.0|
;;;278    {
;;;279          while(1);
;;;280    }
;;;281    
                          ENDP


                          AREA vectors, DATA, READONLY, ALIGN=2

                  __Vectors
                          DCD      0x20003000
                          DCD      Reset_Handler
                          DCD      NMI_Handler
                          DCD      HardFault_Handler
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      SVC_Handler
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      PendSV_Handler
                          DCD      SysTick_Handler
                          DCD      BOD_IRQHandler
                          DCD      WDT_IRQHandler
                          DCD      EINT0_IRQHandler
                          DCD      EINT1_IRQHandler
                          DCD      GPAB_IRQHandler
                          DCD      ALC_IRQHandler
                          DCD      PWMA_IRQHandler
                          DCD      Default_IRQHandler
                          DCD      TMR0_IRQHandler
                          DCD      TMR1_IRQHandler
                          DCD      Default_IRQHandler
                          DCD      Default_IRQHandler
                          DCD      UART02_IRQHandler
                          DCD      Default_IRQHandler
                          DCD      SPI0_IRQHandler
                          DCD      DPWM_IRQHandler
                          DCD      Default_IRQHandler
                          DCD      Default_IRQHandler
                          DCD      I2C0_IRQHandler
                          DCD      Default_IRQHandler
                          DCD      GPIO_IRQHandler
                          DCD      TALARM_IRQHandler
                          DCD      Default_IRQHandler
                          DCD      Default_IRQHandler
                          DCD      Default_IRQHandler
                          DCD      ACMP_IRQHandler
                          DCD      PDMA_IRQHandler
                          DCD      I2S_IRQHandler
                          DCD      CAPS_IRQHandler
                          DCD      ADC_IRQHandler
                          DCD      Default_IRQHandler
                          DCD      RTC_IRQHandler

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\..\\CMSIS\\CM0\\DeviceSupport\\NUVOTON\\ISD91xx\\boot_ISD9xx.c"
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___13_boot_ISD9xx_c_7299b4be____REV16|
#line 112 "..\\..\\..\\..\\CMSIS\\CM0\\CoreSupport\\core_cmInstr.h"
|__asm___13_boot_ISD9xx_c_7299b4be____REV16| PROC
#line 113

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___13_boot_ISD9xx_c_7299b4be____REVSH|
#line 130
|__asm___13_boot_ISD9xx_c_7299b4be____REVSH| PROC
#line 131

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
