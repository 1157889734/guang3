; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\output\play_ctrl.o --asm_dir=..\list\ --list_dir=..\list\ --depend=..\output\play_ctrl.d --cpu=Cortex-M0 --apcs=interwork -O0 -I..\inc -I..\..\ISD91XX_SDK\CMSIS\CM0\CoreSupport -I..\..\ISD91XX_SDK\CMSIS\CM0\DeviceSupport\Nuvoton\ISD91xx -I..\..\ISD91XX_SDK\NuvotonPlatform_Keil\Include\Driver -I..\..\ISD91XX_SDK\NuvotonPlatform_Keil\Include -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\INC\Nuvoton --omf_browse=..\output\play_ctrl.crf ..\src\play_ctrl.c]
                          THUMB

                          AREA ||i.play_ctrl||, CODE, READONLY, ALIGN=2

                  play_ctrl PROC
;;;7      
;;;8      void play_ctrl(void)
000000  b510              PUSH     {r4,lr}
;;;9      {
;;;10     	play_ctrl_now = DrvGPIO_GetBit(PLAY_CTRL_PORT, PLAY_CTRL_PIN);
000002  2100              MOVS     r1,#0
000004  2001              MOVS     r0,#1
000006  f7fffffe          BL       DrvGPIO_GetBit
00000a  4911              LDR      r1,|L1.80|
00000c  6008              STR      r0,[r1,#0]  ; play_ctrl_now
;;;11     	if((play_ctrl_now == 0) && (play_ctrl_old == 1))				// PLAY控制引脚为下降沿
00000e  4608              MOV      r0,r1
000010  6800              LDR      r0,[r0,#0]  ; play_ctrl_now
000012  2800              CMP      r0,#0
000014  d10a              BNE      |L1.44|
000016  480f              LDR      r0,|L1.84|
000018  6800              LDR      r0,[r0,#0]  ; play_ctrl_old
00001a  2801              CMP      r0,#1
00001c  d106              BNE      |L1.44|
;;;12     	{
;;;13     		DrvGPIO_ClrBit(PLAY_STATUS_PORT, PLAY_STATUS_PIN);
00001e  2107              MOVS     r1,#7
000020  2000              MOVS     r0,#0
000022  f7fffffe          BL       DrvGPIO_ClrBit
;;;14     		playback_start();		
000026  f7fffffe          BL       playback_start
00002a  e00c              B        |L1.70|
                  |L1.44|
;;;15     	}
;;;16     	else if((play_ctrl_now == 1) && (play_ctrl_old == 0))			// PLAY控制引脚为上升沿
00002c  4808              LDR      r0,|L1.80|
00002e  6800              LDR      r0,[r0,#0]  ; play_ctrl_now
000030  2801              CMP      r0,#1
000032  d108              BNE      |L1.70|
000034  4807              LDR      r0,|L1.84|
000036  6800              LDR      r0,[r0,#0]  ; play_ctrl_old
000038  2800              CMP      r0,#0
00003a  d104              BNE      |L1.70|
;;;17     	{
;;;18     		DrvGPIO_SetBit(PLAY_STATUS_PORT, PLAY_STATUS_PIN);
00003c  2107              MOVS     r1,#7
00003e  f7fffffe          BL       DrvGPIO_SetBit
;;;19     		playback_stop();	
000042  f7fffffe          BL       playback_stop
                  |L1.70|
;;;20     	}
;;;21     	
;;;22     	play_ctrl_old = play_ctrl_now;	
000046  4802              LDR      r0,|L1.80|
000048  6800              LDR      r0,[r0,#0]  ; play_ctrl_now
00004a  4902              LDR      r1,|L1.84|
00004c  6008              STR      r0,[r1,#0]  ; play_ctrl_old
;;;23     }
00004e  bd10              POP      {r4,pc}
;;;24     
                          ENDP

                  |L1.80|
                          DCD      play_ctrl_now
                  |L1.84|
                          DCD      play_ctrl_old

                          AREA ||i.play_port_init||, CODE, READONLY, ALIGN=1

                  play_port_init PROC
;;;24     
;;;25     void play_port_init(void)
000000  b510              PUSH     {r4,lr}
;;;26     {
;;;27     	DrvGPIO_Open(PLAY_STATUS_PORT, PLAY_STATUS_PIN, IO_OUTPUT);		// 设置PLAY状态引脚为输出
000002  2201              MOVS     r2,#1
000004  2107              MOVS     r1,#7
000006  2000              MOVS     r0,#0
000008  f7fffffe          BL       DrvGPIO_Open
;;;28     	DrvGPIO_SetBit(PLAY_STATUS_PORT, PLAY_STATUS_PIN);				// 设置PLAY状态引脚电平为高
00000c  2107              MOVS     r1,#7
00000e  2000              MOVS     r0,#0
000010  f7fffffe          BL       DrvGPIO_SetBit
;;;29     
;;;30     	DrvGPIO_Open(PLAY_CTRL_PORT, PLAY_CTRL_PIN, IO_INPUT);			// 设置PLAY控制引脚为输入
000014  2200              MOVS     r2,#0
000016  4611              MOV      r1,r2
000018  2001              MOVS     r0,#1
00001a  f7fffffe          BL       DrvGPIO_Open
;;;31     	DrvGPIO_SetBit(PLAY_CTRL_PORT, PLAY_CTRL_PIN);					// 设置PLAY控制引脚电平为高
00001e  2100              MOVS     r1,#0
000020  2001              MOVS     r0,#1
000022  f7fffffe          BL       DrvGPIO_SetBit
;;;32     }
000026  bd10              POP      {r4,pc}
                          ENDP


                          AREA ||.data||, DATA, ALIGN=2

                  play_ctrl_now
                          DCD      0x00000001
                  play_ctrl_old
                          DCD      0x00000001

;*** Start embedded assembler ***

#line 1 "..\\src\\play_ctrl.c"
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___11_play_ctrl_c_0f7d7d4d____REV16|
#line 112 "..\\..\\ISD91XX_SDK\\CMSIS\\CM0\\CoreSupport\\core_cmInstr.h"
|__asm___11_play_ctrl_c_0f7d7d4d____REV16| PROC
#line 113

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___11_play_ctrl_c_0f7d7d4d____REVSH|
#line 130
|__asm___11_play_ctrl_c_0f7d7d4d____REVSH| PROC
#line 131

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
