; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\output\drvdpwm.o --asm_dir=..\list\ --list_dir=..\list\ --depend=..\output\drvdpwm.d --cpu=Cortex-M0 --apcs=interwork -O0 -I..\inc -I..\..\ISD91XX_SDK\CMSIS\CM0\CoreSupport -I..\..\ISD91XX_SDK\CMSIS\CM0\DeviceSupport\Nuvoton\ISD91xx -I..\..\ISD91XX_SDK\NuvotonPlatform_Keil\Include\Driver -I..\..\ISD91XX_SDK\NuvotonPlatform_Keil\Include -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\INC\Nuvoton --omf_browse=..\output\drvdpwm.crf ..\..\ISD91XX_SDK\NuvotonPlatform_Keil\Src\Driver\DrvDPWM.c]
                          THUMB

                          AREA ||i.DrvDPWM_AltPins||, CODE, READONLY, ALIGN=2

                  DrvDPWM_AltPins PROC
;;;79     /*---------------------------------------------------------------------------------------------------------*/
;;;80     void DrvDPWM_AltPins(int32_t Enable)
000000  2800              CMP      r0,#0
;;;81     {
;;;82     		if(Enable){
000002  d014              BEQ      |L1.46|
;;;83     		/* Select GPA[13:12] alternate function for DPWM */
;;;84     		SYS->GPA_ALT.GPA12            =2; // SPKP
000004  2105              MOVS     r1,#5
000006  0709              LSLS     r1,r1,#28
000008  6b89              LDR      r1,[r1,#0x38]
00000a  2203              MOVS     r2,#3
00000c  0612              LSLS     r2,r2,#24
00000e  4391              BICS     r1,r1,r2
000010  2201              MOVS     r2,#1
000012  0652              LSLS     r2,r2,#25
000014  1889              ADDS     r1,r1,r2
000016  4a0d              LDR      r2,|L1.76|
000018  6391              STR      r1,[r2,#0x38]
;;;85     		SYS->GPA_ALT.GPA13            =2; // SPKM
00001a  4611              MOV      r1,r2
00001c  6b89              LDR      r1,[r1,#0x38]
00001e  4a0c              LDR      r2,|L1.80|
000020  4391              BICS     r1,r1,r2
000022  2201              MOVS     r2,#1
000024  06d2              LSLS     r2,r2,#27
000026  1889              ADDS     r1,r1,r2
000028  4a08              LDR      r2,|L1.76|
00002a  6391              STR      r1,[r2,#0x38]
00002c  e00c              B        |L1.72|
                  |L1.46|
;;;86     		}else{
;;;87     		SYS->GPA_ALT.GPA12            =0; // SPKP
00002e  4907              LDR      r1,|L1.76|
000030  6b89              LDR      r1,[r1,#0x38]
000032  2203              MOVS     r2,#3
000034  0612              LSLS     r2,r2,#24
000036  4391              BICS     r1,r1,r2
000038  4a04              LDR      r2,|L1.76|
00003a  6391              STR      r1,[r2,#0x38]
;;;88     		SYS->GPA_ALT.GPA13            =0; // SPKM
00003c  4611              MOV      r1,r2
00003e  6b89              LDR      r1,[r1,#0x38]
000040  4a03              LDR      r2,|L1.80|
000042  4391              BICS     r1,r1,r2
000044  4a01              LDR      r2,|L1.76|
000046  6391              STR      r1,[r2,#0x38]
                  |L1.72|
;;;89     		}
;;;90     	
;;;91     }
000048  4770              BX       lr
;;;92     
                          ENDP

00004a  0000              DCW      0x0000
                  |L1.76|
                          DCD      0x50000000
                  |L1.80|
                          DCD      0x0c000000

                          AREA ||i.DrvDPWM_Close||, CODE, READONLY, ALIGN=2

                  DrvDPWM_Close PROC
;;;53     /*---------------------------------------------------------------------------------------------------------*/
;;;54     void DrvDPWM_Close(void)
000000  2010              MOVS     r0,#0x10
;;;55     {
;;;56     		int32_t i=16;
;;;57             // Flush FIFO
;;;58     		while(i--)
000002  e002              B        |L2.10|
                  |L2.4|
;;;59     			DPWM->FIFO = 0;	
000004  2100              MOVS     r1,#0
000006  4a0e              LDR      r2,|L2.64|
000008  60d1              STR      r1,[r2,#0xc]
                  |L2.10|
00000a  4601              MOV      r1,r0                 ;58
00000c  1e40              SUBS     r0,r0,#1              ;58
00000e  2900              CMP      r1,#0                 ;58
000010  d1f8              BNE      |L2.4|
;;;60     		/* reset DPWM */
;;;61     		SYS->IPRSTC2.DPWM_RST         =1;
000012  2105              MOVS     r1,#5
000014  0709              LSLS     r1,r1,#28
000016  68c9              LDR      r1,[r1,#0xc]
000018  2201              MOVS     r2,#1
00001a  0352              LSLS     r2,r2,#13
00001c  4391              BICS     r1,r1,r2
00001e  1889              ADDS     r1,r1,r2
000020  4a08              LDR      r2,|L2.68|
000022  60d1              STR      r1,[r2,#0xc]
;;;62     		SYS->IPRSTC2.DPWM_RST         =0;
000024  4611              MOV      r1,r2
000026  68c9              LDR      r1,[r1,#0xc]
000028  4a07              LDR      r2,|L2.72|
00002a  4391              BICS     r1,r1,r2
00002c  4a05              LDR      r2,|L2.68|
00002e  60d1              STR      r1,[r2,#0xc]
;;;63     
;;;64     		/* disable DPWM clock */
;;;65     		SYSCLK->APBCLK.DPWM_EN        =0;
000030  4906              LDR      r1,|L2.76|
000032  6889              LDR      r1,[r1,#8]
000034  4a04              LDR      r2,|L2.72|
000036  4391              BICS     r1,r1,r2
000038  4a04              LDR      r2,|L2.76|
00003a  6091              STR      r1,[r2,#8]
;;;66     }
00003c  4770              BX       lr
;;;67     
                          ENDP

00003e  0000              DCW      0x0000
                  |L2.64|
                          DCD      0x40070000
                  |L2.68|
                          DCD      0x50000000
                  |L2.72|
                          DCD      0x00002000
                  |L2.76|
                          DCD      0x50000200

                          AREA ||i.DrvDPWM_Disable||, CODE, READONLY, ALIGN=2

                  DrvDPWM_Disable PROC
;;;208    /*---------------------------------------------------------------------------------------------------------*/
;;;209    void DrvDPWM_Disable(void)
000000  4803              LDR      r0,|L3.16|
;;;210    {
;;;211    	DPWM->CTRL.Enable = 0;
000002  6800              LDR      r0,[r0,#0]
000004  2140              MOVS     r1,#0x40
000006  4388              BICS     r0,r0,r1
000008  4901              LDR      r1,|L3.16|
00000a  6008              STR      r0,[r1,#0]
;;;212    }
00000c  4770              BX       lr
;;;213    
                          ENDP

00000e  0000              DCW      0x0000
                  |L3.16|
                          DCD      0x40070000

                          AREA ||i.DrvDPWM_DisablePDMA||, CODE, READONLY, ALIGN=2

                  DrvDPWM_DisablePDMA PROC
;;;276    /*---------------------------------------------------------------------------------------------------------*/
;;;277    void DrvDPWM_DisablePDMA(void)
000000  4803              LDR      r0,|L4.16|
;;;278    {
;;;279    	 DPWM->DMA.EnablePDMA = 0;
000002  6880              LDR      r0,[r0,#8]
000004  0840              LSRS     r0,r0,#1
000006  0040              LSLS     r0,r0,#1
000008  4901              LDR      r1,|L4.16|
00000a  6088              STR      r0,[r1,#8]
;;;280    }
00000c  4770              BX       lr
;;;281    
                          ENDP

00000e  0000              DCW      0x0000
                  |L4.16|
                          DCD      0x40070000

                          AREA ||i.DrvDPWM_Dither||, CODE, READONLY, ALIGN=2

                  DrvDPWM_Dither PROC
;;;174    /*---------------------------------------------------------------------------------------------------------*/
;;;175    void DrvDPWM_Dither(E_DRVDPWM_DITHERTYPE eDitherType)
000000  4905              LDR      r1,|L5.24|
;;;176    {
;;;177    	DPWM->CTRL.Dither = eDitherType;
000002  6809              LDR      r1,[r1,#0]
000004  2230              MOVS     r2,#0x30
000006  4391              BICS     r1,r1,r2
000008  0102              LSLS     r2,r0,#4
00000a  2330              MOVS     r3,#0x30
00000c  401a              ANDS     r2,r2,r3
00000e  4311              ORRS     r1,r1,r2
000010  4a01              LDR      r2,|L5.24|
000012  6011              STR      r1,[r2,#0]
;;;178    }
000014  4770              BX       lr
;;;179    
                          ENDP

000016  0000              DCW      0x0000
                  |L5.24|
                          DCD      0x40070000

                          AREA ||i.DrvDPWM_Enable||, CODE, READONLY, ALIGN=2

                  DrvDPWM_Enable PROC
;;;191    /*---------------------------------------------------------------------------------------------------------*/
;;;192    void DrvDPWM_Enable(void)
000000  4803              LDR      r0,|L6.16|
;;;193    {
;;;194    	DPWM->CTRL.Enable = 1;
000002  6800              LDR      r0,[r0,#0]
000004  2140              MOVS     r1,#0x40
000006  4388              BICS     r0,r0,r1
000008  3040              ADDS     r0,r0,#0x40
00000a  4901              LDR      r1,|L6.16|
00000c  6008              STR      r0,[r1,#0]
;;;195    }
00000e  4770              BX       lr
;;;196    
                          ENDP

                  |L6.16|
                          DCD      0x40070000

                          AREA ||i.DrvDPWM_EnablePDMA||, CODE, READONLY, ALIGN=2

                  DrvDPWM_EnablePDMA PROC
;;;259    /*---------------------------------------------------------------------------------------------------------*/
;;;260    void DrvDPWM_EnablePDMA(void)
000000  4803              LDR      r0,|L7.16|
;;;261    {
;;;262    	 DPWM->DMA.EnablePDMA = 1;
000002  6880              LDR      r0,[r0,#8]
000004  0840              LSRS     r0,r0,#1
000006  0040              LSLS     r0,r0,#1
000008  1c40              ADDS     r0,r0,#1
00000a  4901              LDR      r1,|L7.16|
00000c  6088              STR      r0,[r1,#8]
;;;263    }
00000e  4770              BX       lr
;;;264    
                          ENDP

                  |L7.16|
                          DCD      0x40070000

                          AREA ||i.DrvDPWM_GetDeadTime||, CODE, READONLY, ALIGN=2

                  DrvDPWM_GetDeadTime PROC
;;;157    /*---------------------------------------------------------------------------------------------------------*/
;;;158    uint32_t DrvDPWM_GetDeadTime(void)
000000  4802              LDR      r0,|L8.12|
;;;159    {
;;;160    	return (DPWM->CTRL.Deadtime);	
000002  6800              LDR      r0,[r0,#0]
000004  0700              LSLS     r0,r0,#28
000006  0fc0              LSRS     r0,r0,#31
;;;161    }
000008  4770              BX       lr
;;;162    
                          ENDP

00000a  0000              DCW      0x0000
                  |L8.12|
                          DCD      0x40070000

                          AREA ||i.DrvDPWM_GetFrequency||, CODE, READONLY, ALIGN=2

                  DrvDPWM_GetFrequency PROC
;;;123    /*---------------------------------------------------------------------------------------------------------*/
;;;124    uint32_t DrvDPWM_GetFrequency(void)
000000  4802              LDR      r0,|L9.12|
;;;125    {
;;;126    	return (DPWM->CTRL.Freq);	  
000002  6800              LDR      r0,[r0,#0]
000004  0740              LSLS     r0,r0,#29
000006  0f40              LSRS     r0,r0,#29
;;;127    }
000008  4770              BX       lr
;;;128    
                          ENDP

00000a  0000              DCW      0x0000
                  |L9.12|
                          DCD      0x40070000

                          AREA ||i.DrvDPWM_GetSampleRate||, CODE, READONLY, ALIGN=2

                  DrvDPWM_GetSampleRate PROC
;;;342    /*---------------------------------------------------------------------------------------------------------*/
;;;343    uint32_t DrvDPWM_GetSampleRate(void)
000000  b510              PUSH     {r4,lr}
;;;344    {
;;;345    	uint32_t u32clk;
;;;346    	
;;;347    	u32clk = DrvSYS_GetHCLK() * 1000;
000002  f7fffffe          BL       DrvSYS_GetHCLK
000006  217d              MOVS     r1,#0x7d
000008  00c9              LSLS     r1,r1,#3
00000a  4348              MULS     r0,r1,r0
00000c  4604              MOV      r4,r0
;;;348    	return (u32clk / (DPWM->ZOH_DIV*64) );
00000e  4803              LDR      r0,|L10.28|
000010  6900              LDR      r0,[r0,#0x10]
000012  0181              LSLS     r1,r0,#6
000014  4620              MOV      r0,r4
000016  f7fffffe          BL       __aeabi_uidivmod
;;;349    }
00001a  bd10              POP      {r4,pc}
;;;350    /*---------------------------------------------------------------------------------------------------------*/
                          ENDP

                  |L10.28|
                          DCD      0x40070000

                          AREA ||i.DrvDPWM_GetVersion||, CODE, READONLY, ALIGN=2

                  DrvDPWM_GetVersion PROC
;;;381    /*-----------------------------------------------------------------------------------------------------------*/
;;;382    uint32_t DrvDPWM_GetVersion(void)
000000  4800              LDR      r0,|L11.4|
;;;383    {
;;;384    	return DRVDPWM_VERSION_NUM;
;;;385    }
000002  4770              BX       lr
                          ENDP

                  |L11.4|
                          DCD      0x00010001

                          AREA ||i.DrvDPWM_IsFIFOEmpty||, CODE, READONLY, ALIGN=2

                  DrvDPWM_IsFIFOEmpty PROC
;;;242    /*---------------------------------------------------------------------------------------------------------*/
;;;243    BOOL DrvDPWM_IsFIFOEmpty(void)
000000  4802              LDR      r0,|L12.12|
;;;244    {
;;;245    	 return (DPWM->STAT.Empty ? TRUE: FALSE);
000002  6840              LDR      r0,[r0,#4]
000004  0780              LSLS     r0,r0,#30
000006  0fc0              LSRS     r0,r0,#31
;;;246    }
000008  4770              BX       lr
;;;247    
                          ENDP

00000a  0000              DCW      0x0000
                  |L12.12|
                          DCD      0x40070000

                          AREA ||i.DrvDPWM_IsFIFOFull||, CODE, READONLY, ALIGN=2

                  DrvDPWM_IsFIFOFull PROC
;;;225    /*---------------------------------------------------------------------------------------------------------*/
;;;226    BOOL DrvDPWM_IsFIFOFull(void)
000000  4802              LDR      r0,|L13.12|
;;;227    {
;;;228    	return (DPWM->STAT.Full ? TRUE: FALSE);
000002  6840              LDR      r0,[r0,#4]
000004  07c0              LSLS     r0,r0,#31
000006  0fc0              LSRS     r0,r0,#31
;;;229    }
000008  4770              BX       lr
;;;230    
                          ENDP

00000a  0000              DCW      0x0000
                  |L13.12|
                          DCD      0x40070000

                          AREA ||i.DrvDPWM_Open||, CODE, READONLY, ALIGN=2

                  DrvDPWM_Open PROC
;;;31     /*---------------------------------------------------------------------------------------------------------*/
;;;32     void DrvDPWM_Open(void)
000000  480a              LDR      r0,|L14.44|
;;;33     {
;;;34     		/* enable DPWM clock */
;;;35     		SYSCLK->APBCLK.DPWM_EN        =1;
000002  6880              LDR      r0,[r0,#8]
000004  2101              MOVS     r1,#1
000006  0349              LSLS     r1,r1,#13
000008  4388              BICS     r0,r0,r1
00000a  1840              ADDS     r0,r0,r1
00000c  4907              LDR      r1,|L14.44|
00000e  6088              STR      r0,[r1,#8]
;;;36     
;;;37     		/* reset DPWM */
;;;38     		SYS->IPRSTC2.DPWM_RST         =1;
000010  4807              LDR      r0,|L14.48|
000012  68c0              LDR      r0,[r0,#0xc]
000014  4907              LDR      r1,|L14.52|
000016  4388              BICS     r0,r0,r1
000018  1840              ADDS     r0,r0,r1
00001a  4905              LDR      r1,|L14.48|
00001c  60c8              STR      r0,[r1,#0xc]
;;;39     		SYS->IPRSTC2.DPWM_RST         =0;
00001e  4608              MOV      r0,r1
000020  68c0              LDR      r0,[r0,#0xc]
000022  4904              LDR      r1,|L14.52|
000024  4388              BICS     r0,r0,r1
000026  4902              LDR      r1,|L14.48|
000028  60c8              STR      r0,[r1,#0xc]
;;;40     
;;;41     }
00002a  4770              BX       lr
;;;42     /*---------------------------------------------------------------------------------------------------------*/
                          ENDP

                  |L14.44|
                          DCD      0x50000200
                  |L14.48|
                          DCD      0x50000000
                  |L14.52|
                          DCD      0x00002000

                          AREA ||i.DrvDPWM_SetDPWMClk||, CODE, READONLY, ALIGN=2

                  DrvDPWM_SetDPWMClk PROC
;;;361    /*---------------------------------------------------------------------------------------------------------*/
;;;362    void DrvDPWM_SetDPWMClk(E_DRVDPWM_DPWMCLK eDpwmClk)
000000  4905              LDR      r1,|L15.24|
;;;363    {
;;;364    	
;;;365    	SYSCLK->CLKSEL1.DPWM_S = eDpwmClk;
000002  6949              LDR      r1,[r1,#0x14]
000004  2210              MOVS     r2,#0x10
000006  4391              BICS     r1,r1,r2
000008  0102              LSLS     r2,r0,#4
00000a  2310              MOVS     r3,#0x10
00000c  401a              ANDS     r2,r2,r3
00000e  4311              ORRS     r1,r1,r2
000010  4a01              LDR      r2,|L15.24|
000012  6151              STR      r1,[r2,#0x14]
;;;366    
;;;367    }
000014  4770              BX       lr
;;;368    
                          ENDP

000016  0000              DCW      0x0000
                  |L15.24|
                          DCD      0x50000200

                          AREA ||i.DrvDPWM_SetDeadTime||, CODE, READONLY, ALIGN=2

                  DrvDPWM_SetDeadTime PROC
;;;140    /*---------------------------------------------------------------------------------------------------------*/
;;;141    void DrvDPWM_SetDeadTime(E_DRVDPWM_DEADTIME eDeadTime)
000000  4905              LDR      r1,|L16.24|
;;;142    {
;;;143    	DPWM->CTRL.Deadtime = eDeadTime;
000002  6809              LDR      r1,[r1,#0]
000004  2208              MOVS     r2,#8
000006  4391              BICS     r1,r1,r2
000008  00c2              LSLS     r2,r0,#3
00000a  2308              MOVS     r3,#8
00000c  401a              ANDS     r2,r2,r3
00000e  4311              ORRS     r1,r1,r2
000010  4a01              LDR      r2,|L16.24|
000012  6011              STR      r1,[r2,#0]
;;;144    }
000014  4770              BX       lr
;;;145    
                          ENDP

000016  0000              DCW      0x0000
                  |L16.24|
                          DCD      0x40070000

                          AREA ||i.DrvDPWM_SetFrequency||, CODE, READONLY, ALIGN=2

                  DrvDPWM_SetFrequency PROC
;;;106    /*---------------------------------------------------------------------------------------------------------*/
;;;107    void DrvDPWM_SetFrequency(E_DRVDPWM_FREQ eFrequency)
000000  4904              LDR      r1,|L17.20|
;;;108    {
;;;109    	DPWM->CTRL.Freq = eFrequency;
000002  6809              LDR      r1,[r1,#0]
000004  08c9              LSRS     r1,r1,#3
000006  00c9              LSLS     r1,r1,#3
000008  0742              LSLS     r2,r0,#29
00000a  0f52              LSRS     r2,r2,#29
00000c  4311              ORRS     r1,r1,r2
00000e  4a01              LDR      r2,|L17.20|
000010  6011              STR      r1,[r2,#0]
;;;110    }
000012  4770              BX       lr
;;;111    
                          ENDP

                  |L17.20|
                          DCD      0x40070000

                          AREA ||i.DrvDPWM_SetSampleRate||, CODE, READONLY, ALIGN=2

                  DrvDPWM_SetSampleRate PROC
;;;320    /*---------------------------------------------------------------------------------------------------------*/
;;;321    uint32_t DrvDPWM_SetSampleRate(uint32_t u32SampleRate)
000000  b570              PUSH     {r4-r6,lr}
;;;322    {
000002  4604              MOV      r4,r0
;;;323    	uint32_t u32clk;
;;;324    	
;;;325    	u32clk = DrvSYS_GetHCLK() * 1000;
000004  f7fffffe          BL       DrvSYS_GetHCLK
000008  217d              MOVS     r1,#0x7d
00000a  00c9              LSLS     r1,r1,#3
00000c  4348              MULS     r0,r1,r0
00000e  4605              MOV      r5,r0
;;;326    
;;;327    	DPWM->ZOH_DIV = (uint8_t)((u32clk/64)/u32SampleRate);
000010  09a8              LSRS     r0,r5,#6
000012  4621              MOV      r1,r4
000014  f7fffffe          BL       __aeabi_uidivmod
000018  b2c0              UXTB     r0,r0
00001a  4904              LDR      r1,|L18.44|
00001c  6108              STR      r0,[r1,#0x10]
;;;328    	return (u32clk /(DPWM->ZOH_DIV*64));
00001e  4608              MOV      r0,r1
000020  6900              LDR      r0,[r0,#0x10]
000022  0181              LSLS     r1,r0,#6
000024  4628              MOV      r0,r5
000026  f7fffffe          BL       __aeabi_uidivmod
;;;329    }
00002a  bd70              POP      {r4-r6,pc}
;;;330    
                          ENDP

                  |L18.44|
                          DCD      0x40070000

                          AREA ||i.DrvDPWM_WriteFIFO||, CODE, READONLY, ALIGN=2

                  DrvDPWM_WriteFIFO PROC
;;;293    /*---------------------------------------------------------------------------------------------------------*/
;;;294    int32_t DrvDPWM_WriteFIFO(int32_t *pi32Stream, int32_t i32count)
000000  b510              PUSH     {r4,lr}
;;;295    {
000002  4602              MOV      r2,r0
;;;296    	int32_t i32countRemain;
;;;297    	
;;;298    	i32countRemain = i32count;
000004  4608              MOV      r0,r1
;;;299    	/* exit when FIFO full or nothing to transmit */
;;;300    	while(i32countRemain > 0 && !DPWM->STAT.Full)	
000006  e003              B        |L19.16|
                  |L19.8|
;;;301    	{
;;;302    		DPWM->FIFO = *pi32Stream++;
000008  ca08              LDM      r2!,{r3}
00000a  4c05              LDR      r4,|L19.32|
00000c  60e3              STR      r3,[r4,#0xc]
;;;303    		i32countRemain --;		
00000e  1e40              SUBS     r0,r0,#1
                  |L19.16|
000010  2800              CMP      r0,#0                 ;300
000012  dd04              BLE      |L19.30|
000014  4b02              LDR      r3,|L19.32|
000016  685b              LDR      r3,[r3,#4]            ;300
000018  07db              LSLS     r3,r3,#31             ;300
00001a  0fdb              LSRS     r3,r3,#31             ;300
00001c  d0f4              BEQ      |L19.8|
                  |L19.30|
;;;304    	}
;;;305    
;;;306    	return i32countRemain;
;;;307    }
00001e  bd10              POP      {r4,pc}
;;;308    
                          ENDP

                  |L19.32|
                          DCD      0x40070000

;*** Start embedded assembler ***

#line 1 "..\\..\\ISD91XX_SDK\\NuvotonPlatform_Keil\\Src\\Driver\\DrvDPWM.c"
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___9_DrvDPWM_c_090090d7____REV16|
#line 112 "..\\..\\ISD91XX_SDK\\CMSIS\\CM0\\CoreSupport\\core_cmInstr.h"
|__asm___9_DrvDPWM_c_090090d7____REV16| PROC
#line 113

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___9_DrvDPWM_c_090090d7____REVSH|
#line 130
|__asm___9_DrvDPWM_c_090090d7____REVSH| PROC
#line 131

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
