//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&UART2驱动程序&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
//*文件名称:uart2.h

//*文件作用:UART2驱动程序

//*文件作者:翟  鹏

//*创建日期:2007年5月
//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&



#ifndef UART2_H
#define UART2_H



//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&& 宏定义 &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
#if(HARDWARE_VERSION==1)
#define UART2_MAX485_CTRL_REG		GPIO2_PD	//485芯片EN控制管脚控制寄存器
#define UART2_MAX485_CTRL_BIT		(14)		//485芯片EN控制管脚在控制寄存器中的第几位
#define UART2_FIFO_SIZE			(512)		//缓冲区大小定义
#define UART2_IRQ_SLOT			EIC_SIR11	//中断控制器优先级的槽
#define UART2_IRQ_VECTOR		(11)		//中断向量号
#define UART2_IRQ_PRIORITY		(10)		//中断优先级---最高15
//硬件版本2
#elif(HARDWARE_VERSION==2)
#define UART2_FIFO_SIZE			(512)		//缓冲区大小定义
#define UART2_IRQ_SLOT			EIC_SIR11	//中断控制器优先级的槽
#define UART2_IRQ_VECTOR		(11)		//中断向量号
#define UART2_IRQ_PRIORITY		(10)		//中断优先级---最高15							//没有485控制
#endif


//&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&& 接口函数 &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&

//***********************************************************************************************************************
//函数作用:UART2中断服务程序
//参数说明:
//注意事项:
//返回说明:无
//***********************************************************************************************************************
extern void UART2_IRQHandler(void);

//***********************************************************************************************************************
//函数作用:UART2初始化
//参数说明:波特率
//注意事项:
//返回说明:无
//***********************************************************************************************************************
extern void  uart2_init(uint32 bps);

//***********************************************************************************************************************
//函数作用:从软件接收FIFO读取单个字符功能（非阻塞模式）
//参数说明:ch---读取字符存放地址
//注意事项:
//返回说明:如果有数据返回1
//***********************************************************************************************************************
extern uint8 uart2_read_char(uint8 *ch);

//***********************************************************************************************************************
//函数作用:向软件发送FIFO写入一个字节并启动发送（非阻塞模式）
//参数说明:
//注意事项:
//返回说明:无
//***********************************************************************************************************************
extern void uart2_write_char(uint8 ch);

//***********************************************************************************************************************
//函数作用:向软件发送FIFO写入一定长度的数据并启动发送（非阻塞模式）
//参数说明:
//注意事项:
//返回说明:无
//***********************************************************************************************************************
extern uint8 uart2_write_buf(uint8 *buf, uint16 length);

//***********************************************************************************************************************
//函数作用:向软件发送FIFO写入字符串并启动发送（非阻塞模式）
//参数说明:
//注意事项:
//返回说明:无
//***********************************************************************************************************************
extern void uart2_write_str(char *str);

//***********************************************************************************************************************
//函数作用:备份软件接收FIFO的读指针
//参数说明:
//注意事项:
//返回说明:无
//***********************************************************************************************************************
extern void uart2_fifo_out_backup(void);

//***********************************************************************************************************************
//函数作用:恢复软件接收FIFO的读指针
//参数说明:
//注意事项:
//返回说明:无
//***********************************************************************************************************************
extern void uart2_fifo_out_resume(void);

//***********************************************************************************************************************
//函数作用:获取硬件测试命令
//参数说明:
//注意事项:
//返回说明:无
//***********************************************************************************************************************
extern uint8 uart2_get_hardware_test(void);



#endif


